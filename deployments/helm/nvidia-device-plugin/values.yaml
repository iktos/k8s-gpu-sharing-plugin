legacyDaemonsetAPI: false
compatWithCPUManager: false
migStrategy: none
failOnInitError: true
deviceListStrategy: envvar
deviceIDStrategy: uuid
nvidiaDriverRoot: "/"

# This is used to specify renaming and replicas (for enabling sharing)
# For example, to share regular gpus with 4 pods and to share mig-3g.20gb GPUs with 2 pods and rename to small.
# resourceConfig: gpu:sharedgpu:4,mig-3g.20gb:small:2
# The pod would then request a shared mig gpu by specifying a resource of "nvidia.com/small: 1"
resourceConfig: gpu:gpu-mem-gb:-1

nameOverride: ""
fullnameOverride: ""
selectorLabelsOverride: {}

namespace: kube-system

imagePullSecrets: []
image:
  repository: aelgasser/k8s-gpu-share-plugin
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "devel"

updateStrategy:
  type: RollingUpdate

podSecurityContext: {}
securityContext: {}

resources: {}
nodeSelector:
  gpushare: "true"
affinity: {}
tolerations:
  # This toleration is deprecated. Kept here for backward compatibility
  # See https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
  - key: CriticalAddonsOnly
    operator: Exists
  - key: nvidia.com/gpu
    operator: Exists
    effect: NoSchedule

runtimeClassName: null
